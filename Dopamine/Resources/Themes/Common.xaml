<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--  Opacity % to hex conversions  -->
    <!--
        100% — FF
        95% — F2
        90% — E6
        85% — D9
        80% — CC
        75% — BF
        70% — B3
        65% — A6
        60% — 99
        55% — 8C
        50% — 80
        45% — 73
        40% — 66
        35% — 59
        30% — 4D
        25% — 40
        20% — 33
        15% — 26
        10% — 1A
        5% — 0D
        0% — 00
    -->

    <!--  Palette  -->
    <Color x:Key="Color_White">#FFFFFF</Color>
    <Color x:Key="Color_Black">#000000</Color>
    <Color x:Key="Color_WhiteInvisible">#00FFFFFF</Color>
    <Color x:Key="Color_BlackInvisible">#00000000</Color>
    <Color x:Key="Color_Grey">#CCCCCC</Color>
    <Color x:Key="Color_Blue">#0000ff</Color>

    <!--  Brushes  -->
    <SolidColorBrush x:Key="Brush_WindowButtonCoverPictureText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_ColorSchemeSelectorIcon" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_ImageOverlayText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_SemanticZoomText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_StatustText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_WindowButtonHoveredIcon" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_WindowButtonPressedIcon" Color="{DynamicResource Color_White}" />
    <SolidColorBrush
        x:Key="Brush_WindowButtonPressedBackground"
        Color="{DynamicResource Color_Accent}"
        Opacity="0.8" />
    <SolidColorBrush x:Key="Brush_WindowButtonAccentIcon" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_WindowIcon" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_ContextMenuSeparator" Color="{DynamicResource Color_Grey}" />
    <SolidColorBrush x:Key="Brush_ContextMenuButton" Color="{DynamicResource Color_Grey}" />
    <SolidColorBrush x:Key="Brush_ContextMenuBackground" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_ContextMenuText" Color="{DynamicResource Color_Black}" />
    <SolidColorBrush x:Key="Brush_ContextMenuTextSelected" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_Accent" Color="{DynamicResource Color_Accent}" />
    <SolidColorBrush x:Key="Brush_ToolTipText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_ListHeaderComboBoxItemSelected" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_RegularButtonAccentText" Color="{DynamicResource Color_White}" />
    <SolidColorBrush x:Key="Brush_SelectedBorder" Color="{DynamicResource Color_Blue}" />

    <!--  Gradient Brushes  -->
    <LinearGradientBrush x:Key="Brush_TopBlackBottomTransparent" StartPoint="0,0" EndPoint="0,1" Opacity="0.8">
        <GradientStop Color="{DynamicResource Color_Black}" Offset="0.0" />
        <GradientStop Color="{DynamicResource Color_BlackInvisible}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_BottomBlackTopTransparent" StartPoint="0,0" EndPoint="0,1" Opacity="0.8">
        <GradientStop Color="{DynamicResource Color_BlackInvisible}" Offset="0.0" />
        <GradientStop Color="{DynamicResource Color_Black}" Offset="1.0" />
    </LinearGradientBrush>

    <BitmapImage x:Key="MissingImage" UriSource="/Resources/Media/no_album_image.png" />
    <system:Double x:Key="DefaultListItemButtonSize">30</system:Double>
    <GridLength x:Key="SplitterWidth">6</GridLength>

    <Style x:Key="ItemSelectionBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="BorderThickness" Value="5,0,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush_Accent}" />
        <Setter Property="Panel.ZIndex" Value="1" />
    </Style>

    <Style x:Key="RegularMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <MenuItem
                        Command="{TemplateBinding Command}"
                        Header="{TemplateBinding Header}"
                        InputGestureText="">
                        <MenuItem.Icon>
                            <TextBlock
                                FontSize="15"
                                FontFamily="/DopamineJ;component/Resources/Fonts/#Segoe MDL2 Assets"
                                Text="{TemplateBinding Icon}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_PrimaryText}" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="HeaderButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_SecondaryText}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <!-- FOR TESTING - ->       
        <Setter Property="TextBlock.FontSize" Value="25" />
        -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="#00000000">
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeaderIconButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_SecondaryText}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <!-- FOR TESTING - ->
        <Setter Property="FontSize" Value="25" />
        -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="#00000000">
                        <TextBlock
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            FontFamily="/DopamineJ;component/Resources/Fonts/#Segoe MDL2 Assets"
                            Foreground="{DynamicResource Brush_SecondaryText}"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="ShowSemanticZoom">
        <Storyboard>
            <DoubleAnimation
                    BeginTime="0:0:0"
                    Storyboard.TargetProperty="Opacity"
                    From="0"
                    To="1"
                    Duration="0:0:0.25" />
            <ThicknessAnimation
                    BeginTime="0:0:0"
                    Storyboard.TargetProperty="Margin"
                    From="-50"
                    To="0"
                    Duration="0:0:0.15" />
        </Storyboard>
    </Storyboard>
    <Storyboard x:Key="HideSemanticZoom">
        <Storyboard>
            <DoubleAnimation
                    BeginTime="0:0:0"
                    Storyboard.TargetProperty="Opacity"
                    From="1"
                    To="0"
                    Duration="0:0:0" />
            <ThicknessAnimation
                    BeginTime="0:0:0"
                    Storyboard.TargetProperty="Margin"
                    From="0"
                    To="-50"
                    Duration="0:0:0" />
        </Storyboard>
    </Storyboard>

</ResourceDictionary>

<baseviews:CommonViewBase
    x:Class="Dopamine.Views.Common.PlaylistControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pc="clr-namespace:Dopamine.Controls"
    xmlns:commonviews="clr-namespace:Dopamine.Views.Common"
    xmlns:baseviews="clr-namespace:Dopamine.Views.Common.Base"
    xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:dc="clr-namespace:Digimezzo.Foundation.WPF.Controls;assembly=Digimezzo.Foundation.WPF"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300"
    prismMvvm:ViewModelLocator.AutoWireViewModel="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <baseviews:CommonViewBase.Resources>
        <Style x:Key="HeaderTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="{DynamicResource Brush_PrimaryText}" />
            <Setter Property="Margin" Value="2" />
        </Style>
    </baseviews:CommonViewBase.Resources>

    <DockPanel>
        <StackPanel
            Orientation="Horizontal"
            Margin="5,0,5,0"
            DockPanel.Dock="Top"
            Height="64">
            <TextBlock Style="{StaticResource HeaderTitle}" Text="{DynamicResource Language_Playlist}" />
            <Button
                Command="{Binding ClearPlaylistCommand}"
                Style="{StaticResource HeaderIconButton}"
                Content="&#xE894;"
                ToolTip="{DynamicResource Language_Clear_Playlist}"/>
            <Button
                Command="{Binding ShufflePlaylistCommand}"
                Style="{StaticResource HeaderIconButton}"
                Content="&#xE8B1;"
                ToolTip="{DynamicResource Language_Shuffle}"/>
        </StackPanel>
        <Grid>
            <Grid
                Visibility="{Binding IsPlaylistEmpty, Converter={StaticResource BooleanToCollapsedConverter}}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                DockPanel.Dock="Top">
                <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Center"
                        Text="{DynamicResource Language_Nothing_Is_Playing}"
                        FontSize="24"
                        FontWeight="Light"
                        Foreground="{DynamicResource Brush_PrimaryText}" />
                    <StackPanel HorizontalAlignment="Center" Margin="30">
                        <commonviews:ShuffleAllControl Margin="5" HorizontalAlignment="Left" />
                    </StackPanel>
                </DockPanel>
            </Grid>
            <DockPanel Visibility="{Binding IsPlaylistEmpty, Converter={StaticResource InvertingBooleanToCollapsedConverter}}">
                <pc:TotalsInformation
                    DockPanel.Dock="Bottom"
                    Margin="10,20,10,0"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource Brush_SecondaryText}"
                    FontSize="13"
                    TotalDurationInformation="{Binding TotalDurationInformation}"
                    TotalSizeInformation="{Binding TotalSizeInformation}"
                    TotalTracksInformation="{Binding TotalTracksInformation}" />
                <dc:MultiSelectListBox
                    x:Name="ListBoxTracks"
                    Margin="0,20,0,0"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.UseDefaultDragAdorner="True"
                    dd:DragDrop.DefaultDragAdornerOpacity="0.5"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    MouseDoubleClick="ListBoxTracks_MouseDoubleClick"
                    KeyUp="ListBoxTracks_KeyUp"
                    PreviewKeyDown="ListBoxTracks_PreviewKeyDown"
                    Style="{StaticResource ListBoxNowPlayingTracks}"
                    ItemsSource="{Binding TracksCvs.View, IsAsync=True}"
                    BorderThickness="0"
                    SelectionMode="Extended">
                    <!-- Playlist: When you enter something on the playlist , it would be good if the playlist would flash (to show something changed) #102 -->
                    <dc:MultiSelectListBox.Resources>
                        <Storyboard x:Key="flash">
                            <!--
                            <DoubleAnimation Storyboard.TargetName="ListBoxTracks" Storyboard.TargetProperty="Opacity" From="1" To="0" AutoReverse="True" Duration="0:0:0.4" RepeatBehavior="0:0:0.8" />
                            -->
                            <ColorAnimation Storyboard.TargetName="ListBoxTracks" Storyboard.TargetProperty="Background.Color" From="#0000" To="#80FFA500" Duration="0:0:0.2" RepeatBehavior="0:0:0.4" AutoReverse="True">
                                <ColorAnimation.EasingFunction>
                                    <SineEase/>
                                </ColorAnimation.EasingFunction>
                            </ColorAnimation> 
                        </Storyboard>
                    </dc:MultiSelectListBox.Resources>
                    <dc:MultiSelectListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracksCommand}" />
                    </dc:MultiSelectListBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedTracksCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItems}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </dc:MultiSelectListBox>
            </DockPanel>
        </Grid>

    </DockPanel>
</baseviews:CommonViewBase>